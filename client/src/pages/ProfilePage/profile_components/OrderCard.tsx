// & üü¢ OrderCard: –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ OrderHistory.

import React, { useEffect } from 'react';
import { Box, Button, Text } from '@chakra-ui/react';
import dayjs from 'dayjs';
import 'dayjs/locale/ru';
// dayjs.extend(localizedFormat); //  –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –∫—Ä–∞—Å–∏–≤–æ –¥–∞—Ç—ã
dayjs.locale('ru'); //  –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –∫—Ä–∞—Å–∏–≤–æ –¥–∞—Ç—ã
import MyCalendar from '../../../components/CalendarCard/CalendarCard';



const { VITE_API, VITE_BASE_URL }: ImportMeta['env'] = import.meta.env;

const formatDateTime = (datetime) => {
  return dayjs(datetime).format('D MMMM (dddd) –≤ HH:mm');
};

const OrderCard = ({ key, order, onDetailsOpen }) => {
  useEffect(() => {
    console.log('üü†üü†orders fromOrderCard', order);
  }, [order]);

  const fetchOrderDetails = async (orderId) => {
    console.log('üü¢ orderId', orderId);
    // setSelectedOrder(ordersState);
    const result = await axiosInstance.get(
      `${VITE_BASE_URL}${VITE_API}/profile/order-details/${orderId}`
    );
    console.log('üü¢ resultfrom fetchOrderDetails', result);
    setOrderDetails(result.data);
    setSelectedOrder(result.data);
  };

  return (
    <Box>  <Box
      p={4}
      borderWidth="1px"
      borderRadius="md"
      w="50%"
      _hover={{ boxShadow: 'md', cursor: 'pointer' }}
      onClick={() => onDetailsOpen(order.id)}
    >
      <Text fontWeight="bold" textAlign="left" fontSize="xl">
        <Text fontWeight="bold">
          –î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞: <br />
          <Text as="span" fontWeight="normal">
            {formatDateTime(order.date)}
          </Text>
        </Text>
      </Text>

      <Text fontWeight="bold" fontSize="lg" >
      <Text fontWeight="bold" >
        –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: (–û–¢–ü–†–ê–í–õ–ï–ù/–î–û–°–¢–ê–í–õ–ï–ù):{' '}
        <Text as="span" fontWeight="normal">
          {order.status}
        </Text>
      </Text>
      <Text fontWeight="bold" >
        –û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏:{' '}
        <Text as="span" fontWeight="normal">
          {formatDateTime(order.estimatedDate)}
        </Text>
      </Text>
      <Text fontWeight="bold">
        –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:{' '}
        <Text as="span" fontWeight="normal">
          {order.totalBasketPrice} —Ä—É–±.
        </Text>
      </Text>
      <Text fontWeight="bold" >
        –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:{' '}
        <Text as="span" fontWeight="normal">
          {order.deliveryAddress}
        </Text>
      </Text>
      <Text fontWeight="bold" >
        –í–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:{' '}
        <Text as="span" fontWeight="normal">
          {order.commentUser}
        </Text>
      </Text>

      {/* <Button onClick={() => onDetailsOpen(order.id)}> –ü–æ–¥—Ä–æ–±–Ω–µ–µ </Button> */}
      </Text>


      

      <Button
        colorScheme="blue"
        // onClick={() => fetchOrderDetails(order)}
        onClick={() => onDetailsOpen(order.id)}
        bg="#ECC94B"
        _hover={{ bg: 'teal.700' }}
        _active={{ bg: 'teal.800' }}
        _focus={{ boxShadow: 'none' }}
      >
        –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ—Ç–∞–ª–∏
      </Button>
    </Box>

    </Box>
  
  );
};

export default OrderCard;
